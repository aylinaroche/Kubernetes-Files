pipeline {
    agent any
    environment {
        PATH = "$PATH:/usr/local/bin/"
    }
    stages {
        stage('CloneGit') {
            steps {
                sh "mkdir -p Kubernetes"
                dir('/var/lib/jenkins/workspace/Pipeline-EKS/Kubernetes'){
                    git credentialsId: 'oli', url: 'git@github.com:aylinaroche/Kubernetes-Files.git'
                }
                echo 'SUCCESSFUL CLONE GIT..'
            }
        }
        stage('Cluster') {
            steps {
                dir('/var/lib/jenkins/workspace/Pipeline-EKS/Kubernetes/EKS/Flask'){
                    sh """
                        export AWS_ACCESS_KEY_ID="YOUR_AWS_ACCESS_KEY_ID"
                        export AWS_SECRET_ACCESS_KEY="YOUR_AWS_SECRET_ACCESS_KEY"
                        export AWS_SESSION_TOKEN="AWS_AWS_SESSION_TOKEN"
                        export AWS_DEFAULT_REGION=us-west-2                         
                        aws eks update-kubeconfig --name Cluster1-Aylin
                        eksctl version
                        kubectl version
                        kubectl delete -f client-deployment.yaml 
                        kubectl apply -f client-deployment.yaml
                        kubectl delete -f client-node-port.yaml 
                        kubectl apply -f client-node-port.yaml 
                        kubectl get all
                    """
                        /*
                        
                        eksctl update cluster \
                            --name Cluster1-Aylin \
                            --version 1.14 \
                            --nodegroup-name worker1-aylin \
                            --node-type t2.micro \
                            --nodes 3 \
                            --nodes-min 1 \
                            --nodes-max 4 \
                            --node-ami auto
                            */
                    echo 'SUCCESSFUL UPLOAD..'
                }
            }
        }
    }
}
