pipeline {
    agent any
    environment {
        PATH = "$PATH:/usr/local/bin/"
    }
    stages {
        stage('CloneGit') {
            steps {
                sh "git --version"
                sh "mkdir -p Docker"
                dir('/var/lib/jenkins/workspace/Pipeline-Docker/Docker'){
                    git credentialsId: 'oli', url: 'git@github.com:aylinaroche/Docker-Files.git'
                }
                sh "mkdir -p Kubernetes"
                dir('/var/lib/jenkins/workspace/Pipeline-Docker/Kubernetes'){
                    git credentialsId: 'oli', url: 'git@github.com:aylinaroche/Kubernetes-Files.git'
                }
                echo 'SUCCESSFUL CLONE GIT..'
            }
        }
        stage('Build') {
            steps {
                dir('/var/lib/jenkins/workspace/Pipeline-Docker/Docker/flask'){
                    sh """
                        ls
                        docker build -t 'repository-aylin' .
                        docker images
                    """
                }
                echo 'SUCCESSFUL BUILD..'
            }
        }
        stage('Upload') {
            steps {
                withCredentials([[$class: 'AmazonWebServicesCredentialsBinding', accessKeyVariable: 'AWS_ACCESS_KEY_ID', credentialsId: 'AWSCredentials', secretKeyVariable: 'AWS_SECRET_ACCESS_KEY']]) {
                    sh """
                        export AWS_ACCESS_KEY_ID="ASIAXFHK42N5JIL5HKNB"
                        export AWS_SECRET_ACCESS_KEY="3l41e9CklRv8X97yax2TEPrdUA3XfmrISEOwCQac"
                        export AWS_SESSION_TOKEN="AgoJb3JpZ2luX2VjEBIaCXVzLXdlc3QtMiJHMEUCICTDIp2ofPmBGoFYB1aNR/bC+ZjHIslFVECEySB5rdyFAiEA1IQq95ROkqHwz8PbY15AMjh+P3c/Gku0triclrr0H+Mq0AIIGhABGgw0OTIyNjYzNzgxMDYiDEU1s7rTpKELIHNw1iqtAlU7w7Rs98Hi46RfkehhIjybfyRV99K6Suyl83vWvNv52LUm0zKU4t2/p8bt23+WzlDH7aQ5JBV9t6SJ6RmVE36wyLC4sLwfcL4w0bHfHvkXWdjA7+88F3imrgQ1KN9l6C0bSztV08W3AT4Nsie4IDWbdburLeo266vZiAZUf5vUruLd8BmwROKfk0lq07tCuzRhSC32o/T+VTXkgaOdajPbGuTrEtp1XhUsjgLp7DJGDLvD3YEdymliz3KjgviZTEVXjkq6S8cJ6ZjO/FY6kVyHsS64582Y3KlK+ebcD1zFmZE7Bf8FHmn7kGTPqjHI5p+wk+4ZK+MD3v0uSwxcbIB3lllzoGaRoPlYQp48bAPREIXy2caaJXsVzAfBBnGmGKvp2d98uRF5ltv4fMQw0pbC7QU6tAFJbayn7E4gtYpSm87fTFjl7M27mGdurB5HAS8MYLsoyL6KC0a5hfxNzrLmlE3n7kPvrU5LD7JRM/ss9sAwm9FCI4WpLstD6CnqtxoCGCFZB3+zKyHEnRDtu7XnV3mIvJaUE0AA3Ffl57+j/RkwT2M4Zpw6OThS8f3CYMp6cuR3SSZWtA9O9tPOd1dpe6zyrZZAjD3nZDhSJ+DSRH6ZzQ48G7O4/2f/WyEGfQbkwqqxprkJJa8="
                        export AWS_DEFAULT_REGION=us-west-2
                        \$(aws ecr get-login --no-include-email --region us-west-2)
                        docker tag repository-aylin:latest 492266378106.dkr.ecr.us-west-2.amazonaws.com/repository-aylin:latest
                        docker push 492266378106.dkr.ecr.us-west-2.amazonaws.com/repository-aylin:latest
                    """
                    echo 'SUCCESSFUL UPLOAD..'
                }
            }
        }
        stage('Cluster') {
            steps {
                withCredentials([[$class: 'AmazonWebServicesCredentialsBinding', accessKeyVariable: 'AWS_ACCESS_KEY_ID', credentialsId: 'AWSCredentials', secretKeyVariable: 'AWS_SECRET_ACCESS_KEY']]) {
                    dir('/var/lib/jenkins/workspace/Pipeline-Docker/Kubernetes'){
                        sh """
                        export AWS_ACCESS_KEY_ID="ASIAXFHK42N5JIL5HKNB"
                        export AWS_SECRET_ACCESS_KEY="3l41e9CklRv8X97yax2TEPrdUA3XfmrISEOwCQac"
                        export AWS_SESSION_TOKEN="AgoJb3JpZ2luX2VjEBIaCXVzLXdlc3QtMiJHMEUCICTDIp2ofPmBGoFYB1aNR/bC+ZjHIslFVECEySB5rdyFAiEA1IQq95ROkqHwz8PbY15AMjh+P3c/Gku0triclrr0H+Mq0AIIGhABGgw0OTIyNjYzNzgxMDYiDEU1s7rTpKELIHNw1iqtAlU7w7Rs98Hi46RfkehhIjybfyRV99K6Suyl83vWvNv52LUm0zKU4t2/p8bt23+WzlDH7aQ5JBV9t6SJ6RmVE36wyLC4sLwfcL4w0bHfHvkXWdjA7+88F3imrgQ1KN9l6C0bSztV08W3AT4Nsie4IDWbdburLeo266vZiAZUf5vUruLd8BmwROKfk0lq07tCuzRhSC32o/T+VTXkgaOdajPbGuTrEtp1XhUsjgLp7DJGDLvD3YEdymliz3KjgviZTEVXjkq6S8cJ6ZjO/FY6kVyHsS64582Y3KlK+ebcD1zFmZE7Bf8FHmn7kGTPqjHI5p+wk+4ZK+MD3v0uSwxcbIB3lllzoGaRoPlYQp48bAPREIXy2caaJXsVzAfBBnGmGKvp2d98uRF5ltv4fMQw0pbC7QU6tAFJbayn7E4gtYpSm87fTFjl7M27mGdurB5HAS8MYLsoyL6KC0a5hfxNzrLmlE3n7kPvrU5LD7JRM/ss9sAwm9FCI4WpLstD6CnqtxoCGCFZB3+zKyHEnRDtu7XnV3mIvJaUE0AA3Ffl57+j/RkwT2M4Zpw6OThS8f3CYMp6cuR3SSZWtA9O9tPOd1dpe6zyrZZAjD3nZDhSJ+DSRH6ZzQ48G7O4/2f/WyEGfQbkwqqxprkJJa8="
                        export AWS_DEFAULT_REGION=us-west-2    
                        eksctl version
                        eksctl create cluster \
                            --name Cluster1-Aylin \
                            --version 1.14 \
                            --nodegroup-name worker1-aylin \
                            --node-type t2.micro \
                            --nodes 3 \
                            --nodes-min 1 \
                            --nodes-max 4 \
                            --node-ami auto
                        """
                    }
                    echo 'SUCCESSFUL UPLOAD..'
                }
            }
        }


    }

}